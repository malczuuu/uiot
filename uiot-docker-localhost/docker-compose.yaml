services:

  kafka:
    image: &kafka-image apache/kafka:4.1.0
    ports:
      - "127.0.0.1:9092:9092"
    environment:
      CLUSTER_ID: 0
      KAFKA_NODE_ID: 0
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 0@kafka:49092
      KAFKA_LISTENERS: EXTERNAL://:9092,INTERNAL://:29092,CONTROLLER://:49092
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9092,INTERNAL://kafka:29092,CONTROLLER://kafka:49092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    volumes:
      - kafka_data:/var/lib/kafka/data:rw
    networks:
      - uiot
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  kafka-init-job:
    image: *kafka-image
    entrypoint: /bin/bash
    networks:
      - uiot
    depends_on:
      kafka:
        condition: service_healthy
    command: |
      -c "
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --topic uiot-accounting --replication-factor=1 --partitions=5 --bootstrap-server kafka:29092 &&
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --topic uiot-accounting-windows --replication-factor=1 --partitions=5 --bootstrap-server kafka:29092 &&
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --topic uiot-thing-events --replication-factor=1 --partitions=5 --bootstrap-server kafka:29092 &&
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --topic uiot-action-execution-events --replication-factor=1 --partitions=5 --bootstrap-server kafka:29092 &&
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --topic uiot-system-events --replication-factor=1 --partitions=5 --bootstrap-server kafka:29092 &&
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --topic uiot-service-history_thing-metadata --replication-factor=1 --partitions=5 --bootstrap-server kafka:29092 &&
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --topic uiot-service-history_keyed-thing-events --replication-factor=1 --partitions=5 --bootstrap-server kafka:29092
      "

  mongo:
    image: mongo:8.0.13
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb_data:/data/db:rw
      - ../uiot-config-mongo:/docker-entrypoint-initdb.d:ro
    networks:
      - uiot
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:4.1.4-management-alpine
    ports:
      - "127.0.0.1:1883:1883"
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:8883:8883"
      - "127.0.0.1:15672:15672"
    volumes:
      - ../uiot-config-rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ../uiot-config-rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins:ro
      - ../uiot-config-rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - rabbitmq_data:/var/lib/rabbitmq:rw
    networks:
      - uiot
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  uiot:

volumes:
  kafka_data:
  mongodb_data:
  rabbitmq_data:
