version: "3"
services:

  mongo:
    image: mongo:5.0.2
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb_data:/data/db:rw
      - ./mongo/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - uiot

  rabbitmq:
    image: rabbitmq:3.8.16-management-alpine
    ports:
      - "127.0.0.1:1883:1883"
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:8883:8883"
      - "127.0.0.1:15672:15672"
    volumes:
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins:ro
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - uiot

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data:rw
    networks:
      - uiot

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    ports:
      - "127.0.0.1:9092:9092"
      - "127.0.0.1:9999:9999"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:29092,OUTSIDE://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_JMX_PORT: 9999
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data:rw
    networks:
      - uiot

volumes:
  mongodb_data:
  zookeeper_data:
  kafka_data:

networks:
  uiot:
    external: true
